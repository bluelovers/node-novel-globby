{"version":3,"file":"util.js","sourceRoot":"","sources":["util.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * Created by user on 2019/5/6.\n */\n\nimport Bluebird = require('bluebird');\nimport { normalize_strip } from '@node-novel/normalize';\n\nexport interface IForeachArrayDeepCache<D = any, U = any>\n{\n\tdeep: number,\n\tdata: D,\n\ttemp: U,\n\ttopCache?: IForeachArrayDeepCache<D, U>,\n}\n\nexport interface IForeachArrayDeepReturn<T, R extends unknown = unknown, D = unknown, U = unknown>\n{\n\tret: R[];\n\tdata: D;\n\ttemp: U;\n}\n\nexport function eachVolumeTitle(volume_title: string | string[], strip: boolean = true)\n{\n\tlet vs: string[];\n\n\tif (Array.isArray(volume_title))\n\t{\n\t\tvs = volume_title;\n\t\tvolume_title = volume_title.join('/');\n\t}\n\telse\n\t{\n\t\tvs = volume_title\n\t\t\t.split('/')\n\t\t;\n\t}\n\n\tif (strip)\n\t{\n\t\tvs = vs.map(t => normalize_strip(t, true));\n\t}\n\n\tlet ret = {\n\t\tvolume_title,\n\t\tlevel: vs.length,\n\t\ttitles: [] as string[],\n\t\ttitles_full: [] as string[],\n\t};\n\n\tlet a: string;\n\n\tvs\n\t\t.forEach((b) => {\n\n\t\t\tret.titles.push(b);\n\n\t\t\tif (a != null)\n\t\t\t{\n\t\t\t\ta += '/' + b;\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\ta = b;\n\t\t\t}\n\n\t\t\tret.titles_full.push(a);\n\t\t})\n\t;\n\n\treturn ret;\n}\n\nexport function foreachArrayDeep<T, R extends unknown = unknown, D = unknown, U = unknown>(arr: IArrayDeepInterface<T>, fn: (argv: {\n\tvalue: T,\n\tindex: number,\n\tarray: IArrayDeepInterface<T>,\n\n\tcache: IForeachArrayDeepCache<D, U>,\n}) => R | void, initCache?: Partial<IForeachArrayDeepCache<D, U>>): IForeachArrayDeepReturn<T, R, D, U>\n{\n\tlet topCache: IForeachArrayDeepCache<D, U> = {\n\t\tdata: {} as any,\n\t\ttemp: {} as any,\n\n\t\t...initCache,\n\n\t\tdeep: 0,\n\t};\n\n\ttopCache.topCache = topCache;\n\n\tlet ret = arr\n\t\t.map(((value, index, array) => {\n\t\t\treturn fnDeep(value, index, array, topCache)\n\t\t}))\n\t;\n\n\tfunction fnDeep(value: T | IArrayDeepInterface<T>, index: number, array: IArrayDeepInterface<T>, cache: IForeachArrayDeepCache<D, U>)\n\t{\n\t\tif (Array.isArray(value))\n\t\t{\n\t\t\treturn value.map((value, index, array) => {\n\t\t\t\treturn fnDeep(value, index, array, {\n\t\t\t\t\t...cache,\n\t\t\t\t\tdeep: cache.deep + 1,\n\t\t\t\t})\n\t\t\t})\n\t\t}\n\t\telse\n\t\t{\n\t\t\treturn fn({\n\t\t\t\tvalue, index, array,\n\t\t\t\tcache,\n\t\t\t})\n\t\t}\n\t}\n\n\treturn {\n\t\tret,\n\t\tdata: topCache.data,\n\t\ttemp: topCache.temp,\n\t};\n}\n\nexport function foreachArrayDeepAsync<T, R extends unknown = unknown, D = unknown, U = unknown>(arr: IArrayDeepInterface<T>, fn: (argv: {\n\tvalue: T,\n\tindex: number,\n\tarray: IArrayDeepInterface<T>,\n\n\tcache: IForeachArrayDeepCache<D, U>,\n}) => PromiseLike<R> | void, initCache?: Partial<IForeachArrayDeepCache<D, U>>): Bluebird<IForeachArrayDeepReturn<T, R, D, U>>\n{\n\tlet topCache: IForeachArrayDeepCache<D, U> = {\n\t\tdata: {} as any,\n\t\ttemp: {} as any,\n\n\t\t...initCache,\n\n\t\tdeep: 0,\n\t};\n\n\ttopCache.topCache = topCache;\n\n\treturn Bluebird.resolve(null)\n\t\t.then(async function ()\n\t\t{\n\t\t\tlet ret = await Bluebird.resolve(arr)\n\t\t\t\t.mapSeries(((value, index, array) => {\n\t\t\t\t\treturn fnDeep(value, index, array, topCache)\n\t\t\t\t}))\n\t\t\t;\n\n\t\t\tfunction fnDeep(value: T | IArrayDeepInterface<T>, index: number, array: IArrayDeepInterface<T>, cache: IForeachArrayDeepCache<D, U>)\n\t\t\t{\n\t\t\t\tif (Array.isArray(value))\n\t\t\t\t{\n\t\t\t\t\treturn Bluebird.resolve(value).mapSeries((value, index, array) => {\n\t\t\t\t\t\treturn fnDeep(value, index, array, {\n\t\t\t\t\t\t\t...cache,\n\t\t\t\t\t\t\tdeep: cache.deep + 1,\n\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t\telse\n\t\t\t\t{\n\t\t\t\t\treturn fn({\n\t\t\t\t\t\tvalue, index, array,\n\t\t\t\t\t\tcache,\n\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tret,\n\t\t\t\tdata: topCache.data,\n\t\t\t\ttemp: topCache.temp,\n\t\t\t};\n\t\t})\n\t;\n}\n\nexport type IArrayDeep<T> = (T | T[] | (T | T[])[])[]\n\nexport interface IArrayDeepInterface<T extends unknown> extends Array<T | T[] | IArrayDeepInterface<T>>\n{\n\n}\n"]}