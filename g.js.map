{"version":3,"file":"g.js","sourceRoot":"","sources":["g.ts"],"names":[],"mappings":";AAAA;;GAEG;;;;;AAIH,6BAAwB;AACxB,2BAAsB;AAEtB,mCAA8C;AACrC,iBADa,cAAM,CACb;AAEf,+BASe;AAIf,SAAgB,WAAW,CAAC,QAAS,EAAE,UAAsC,EAAE;IAE9E,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,gBAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAEpD,OAAO,eAAW,CAAC,WAAW,CAAC,QAAQ,EAAE,OAAO,CAAC;SAC/C,IAAI,CAAC,UAAU,EAAE;QAEjB,OAAO,oBAAc,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IACpC,CAAC,CAAC,CACF;AACF,CAAC;AAVD,kCAUC;AAED,WAAiB,WAAW;IAM3B,SAAgB,IAAI,CAAC,QAAS,EAAE,UAAsC,EAAE;QAEvE,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,gBAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAEpD,OAAO,oBAAc,CAAC,eAAW,CAAC,UAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;IAC3E,CAAC;IALe,gBAAI,OAKnB,CAAA;AACF,CAAC,EAZgB,WAAW,GAAX,mBAAW,KAAX,mBAAW,QAY3B;AAEY,QAAA,UAAU,GAAG,WAAW,CAAC,IAA8B,CAAC;AACrE,WAAW,CAAC,KAAK,GAAG,WAAsC,CAAC;AAE9C,QAAA,KAAK,GAAG,WAAW,CAAC;AACpB,QAAA,IAAI,GAAG,WAAW,CAAC,IAA8B,CAAC;AAE/D,kBAAe,WAAW,CAAC","sourcesContent":["/**\n * Created by user on 2018/2/12/012.\n */\n\nimport Promise = require('bluebird');\nimport Bluebird = require('bluebird');\nexport * from './index';\nexport * from './lib';\n\nimport novelGlobby, { globby } from './index';\nexport { globby }\n\nimport {\n\tgetOptions,\n\treturnGlobList,\n\n\tIApiWithReturnGlob,\n\tIOptionsWithReturnGlobList,\n\n\tIApiWithReturnGlobSync,\n\tIApiWithReturnGlobAsync,\n} from './lib';\n\nexport function globbyASync(options: IOptionsWithReturnGlobList): Bluebird<string[]>\nexport function globbyASync(patterns?: string[], options?: IOptionsWithReturnGlobList): Bluebird<string[]>\nexport function globbyASync(patterns?, options: IOptionsWithReturnGlobList = {}): Bluebird<string[]>\n{\n\t[patterns, options] = getOptions(patterns, options);\n\n\treturn novelGlobby.globbyASync(patterns, options)\n\t\t.then(function (ls)\n\t\t{\n\t\t\treturn returnGlobList(ls, options);\n\t\t})\n\t;\n}\n\nexport namespace globbyASync\n{\n\texport declare let async: IApiWithReturnGlobAsync;\n\n\texport function sync(options: IOptionsWithReturnGlobList): string[]\n\texport function sync(patterns?: string[], options?: IOptionsWithReturnGlobList): string[]\n\texport function sync(patterns?, options: IOptionsWithReturnGlobList = {}): string[]\n\t{\n\t\t[patterns, options] = getOptions(patterns, options);\n\n\t\treturn returnGlobList(novelGlobby.globbySync(patterns, options), options);\n\t}\n}\n\nexport const globbySync = globbyASync.sync as IApiWithReturnGlobSync;\nglobbyASync.async = globbyASync as IApiWithReturnGlobAsync;\n\nexport const async = globbyASync;\nexport const sync = globbyASync.sync as IApiWithReturnGlobSync;\n\nexport default globbyASync;\n"]}