{"version":3,"file":"index.js","sourceRoot":"","sources":["index.ts"],"names":[],"mappings":";AAAA;;GAEG;;;;;AAEH,oCAAqC;AACrC,iCAAkC;AAGzB,wBAAM;AAFf,2BAAsB;AAItB,+BAOe;AAIf,SAAgB,UAAU,CAAC,QAAS,EAAE,UAAoB,EAAE;IAE3D;QACC,IAAI,GAAG,GAAG,gBAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QACxC,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,QAAQ,EAAE,GAAG,CAAC,OAAO,CAAC,CAAC;KAClD;IAED,IAAI,EAAE,GAAG,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAExC,OAAO,gBAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;AAChC,CAAC;AAVD,gCAUC;AAID,SAAgB,WAAW,CAAC,QAAS,EAAE,UAAoB,EAAE;IAE5D;QACC;;;UAGE;QAEF,CAAC,QAAQ,EAAE,OAAO,CAAC,GAAG,gBAAU,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;KACpD;IAED,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;IAEnC,aAAa;IACb,IAAI,CAAC,GAAY,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,OAAO,CAAC;IAEnE,OAAO,CAAC,CAAC,OAAO,CAAC,EAAE,CAAC;SAClB,IAAI,CAAC,UAAU,EAAE;QAEjB,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,EAAE,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,UAAU,EAC7C;YACC,OAAO,OAAO,CAAC,MAAM,CAAC,IAAI,KAAK,CAAC,4BAA4B,CAAC,CAAC,CAAC;SAC/D;QAED,OAAO,gBAAU,CAAC,EAAE,EAAE,OAAO,CAAC,CAAC;IAChC,CAAC,CAAC,CACD;AACH,CAAC;AA3BD,kCA2BC;AAED,kBAAe,OAAmC,CAAC","sourcesContent":["/**\n * Created by user on 2018/1/26/026.\n */\n\nimport Promise = require('bluebird');\nimport globby = require('globby');\nexport * from './lib';\n\nexport { globby }\n\nimport {\n\tgetOptions,\n\n\tIOptions,\n\tIReturnList,\n\tglobToList,\n\n} from './lib';\n\nexport function globbySync(options: IOptions): IReturnList\nexport function globbySync(patterns?: string[], options?: IOptions): IReturnList\nexport function globbySync(patterns?, options: IOptions = {}): IReturnList\n{\n\t{\n\t\tlet ret = getOptions(patterns, options);\n\t\t[patterns, options] = [ret.patterns, ret.options];\n\t}\n\n\tlet ls = globby.sync(patterns, options);\n\n\treturn globToList(ls, options);\n}\n\nexport function globbyASync(options: IOptions): Promise<IReturnList>\nexport function globbyASync(patterns?: string[], options?: IOptions): Promise<IReturnList>\nexport function globbyASync(patterns?, options: IOptions = {}): Promise<IReturnList>\n{\n\t{\n\t\t/*\n\t\tlet ret = getOptions(patterns, options);\n\t\t[patterns, options] = [ret.patterns, ret.options];\n\t\t*/\n\n\t\t[patterns, options] = getOptions(patterns, options);\n\t}\n\n\tlet ls = globby(patterns, options);\n\n\t// @ts-ignore\n\tlet p: Promise = options.libPromise ? options.libPromise : Promise;\n\n\treturn p.resolve(ls)\n\t\t.then(function (ls)\n\t\t{\n\t\t\tif ((!ls || !ls.length) && options.throwEmpty)\n\t\t\t{\n\t\t\t\treturn Promise.reject(new Error(`glob matched list is empty`));\n\t\t\t}\n\n\t\t\treturn globToList(ls, options);\n\t\t})\n\t\t;\n}\n\nexport default exports as typeof import('./index');\n"]}